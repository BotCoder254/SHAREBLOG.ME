/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { AnnouncementWhereUniqueInput } from "../../announcement/base/AnnouncementWhereUniqueInput";
import { Type } from "class-transformer";
import { AttendanceCreateNestedManyWithoutStudentsInput } from "./AttendanceCreateNestedManyWithoutStudentsInput";
import { CourseWhereUniqueInput } from "../../course/base/CourseWhereUniqueInput";
import { DocumentCreateNestedManyWithoutStudentsInput } from "./DocumentCreateNestedManyWithoutStudentsInput";
import { ExamWhereUniqueInput } from "../../exam/base/ExamWhereUniqueInput";
import { FeeCreateNestedManyWithoutStudentsInput } from "./FeeCreateNestedManyWithoutStudentsInput";

@InputType()
class StudentCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => AnnouncementWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AnnouncementWhereUniqueInput)
  @IsOptional()
  @Field(() => AnnouncementWhereUniqueInput, {
    nullable: true,
  })
  announcements?: AnnouncementWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => AttendanceCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => AttendanceCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  attendances?: AttendanceCreateNestedManyWithoutStudentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  classField?: string | null;

  @ApiProperty({
    required: false,
    type: () => CourseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CourseWhereUniqueInput)
  @IsOptional()
  @Field(() => CourseWhereUniqueInput, {
    nullable: true,
  })
  course?: CourseWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => DocumentCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => DocumentCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => DocumentCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  documents?: DocumentCreateNestedManyWithoutStudentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => ExamWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ExamWhereUniqueInput)
  @IsOptional()
  @Field(() => ExamWhereUniqueInput, {
    nullable: true,
  })
  exam?: ExamWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => FeeCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => FeeCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => FeeCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  fees?: FeeCreateNestedManyWithoutStudentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  grade?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;
}

export { StudentCreateInput as StudentCreateInput };
