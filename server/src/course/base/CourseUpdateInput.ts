/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { ExamUpdateManyWithoutCoursesInput } from "./ExamUpdateManyWithoutCoursesInput";
import { Type } from "class-transformer";
import { StudentUpdateManyWithoutCoursesInput } from "./StudentUpdateManyWithoutCoursesInput";
import { TeacherWhereUniqueInput } from "../../teacher/base/TeacherWhereUniqueInput";

@InputType()
class CourseUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  duration?: string | null;

  @ApiProperty({
    required: false,
    type: () => ExamUpdateManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => ExamUpdateManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => ExamUpdateManyWithoutCoursesInput, {
    nullable: true,
  })
  exams?: ExamUpdateManyWithoutCoursesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  prerequisites?: string | null;

  @ApiProperty({
    required: false,
    type: () => StudentUpdateManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => StudentUpdateManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => StudentUpdateManyWithoutCoursesInput, {
    nullable: true,
  })
  students?: StudentUpdateManyWithoutCoursesInput;

  @ApiProperty({
    required: false,
    type: () => TeacherWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TeacherWhereUniqueInput)
  @IsOptional()
  @Field(() => TeacherWhereUniqueInput, {
    nullable: true,
  })
  teacher?: TeacherWhereUniqueInput | null;
}

export { CourseUpdateInput as CourseUpdateInput };
